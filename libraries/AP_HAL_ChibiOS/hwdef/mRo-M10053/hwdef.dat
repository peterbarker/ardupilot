# hw definition file for processing by chibios_pins.py

# MCU class and specific type
MCU STM32G431 STM32G431xx

# bootloader starts firmware at 26kB (24k bootloader + 2k (STORAGE_FLASH_PAGES))
FLASH_RESERVE_START_KB 24

FLASH_SIZE_KB 128

# parameter storage:
STORAGE_FLASH_PAGE 63
define HAL_STORAGE_SIZE 800

# board ID for firmware load
APJ_BOARD_ID 1121

# setup build for a peripheral firmware
env AP_PERIPH 1
#env OPTIMIZE -O3

# crystal frequency
OSCILLATOR_HZ 8000000

define CH_CFG_ST_FREQUENCY 1000

# order of UARTs
#SERIAL_ORDER USART1
define HAL_NO_UARTDRIVER
define HAL_USE_SERIAL FALSE
define STM32_SERIAL_USE_USART1 FALSE
define STM32_SERIAL_USE_USART2 FALSE
define STM32_SERIAL_USE_USART3 FALSE

# a LED to flash
PA4 LED OUTPUT LOW

# USART1, connected to GPS
#PA9  USART1_TX USART1 SPEED_HIGH NODMA
#PA10 USART1_RX USART1 SPEED_HIGH NODMA

# USART2 for debug (disabled)
#PA2 USART2_TX USART2 SPEED_HIGH NODMA
#PA3 USART2_RX USART2 SPEED_HIGH NODMA

define HAL_UART_NODMA

# only one I2C bus in normal config
PA15 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# analog input
#PA0 VIN5 ADC1
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER FALSE

define HAL_NO_GPIO_IRQ
define CH_CFG_ST_TIMEDELTA 0
#define CH_CFG_USE_DYNAMIC FALSE
define SERIAL_BUFFERS_SIZE 256
define PORT_INT_REQUIRED_STACK 64

# avoid timer and RCIN threads to save memory
define HAL_NO_TIMER_THREAD
define HAL_NO_RCOUT_THREAD
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE

define DMA_RESERVE_SIZE 0

# MAIN_STACK is stack of initial thread and ISRs
MAIN_STACK 0x200

# PROCESS_STACK controls stack for main thread
PROCESS_STACK 0xA00
define HAL_DISABLE_LOOP_DELAY

# enable CAN support
PA11 CAN1_RX CAN1
PA12 CAN1_TX CAN1

# reduce memory overheads
define HAL_CAN_POOL_SIZE 2000

define HAL_USE_I2C TRUE
define STM32_I2C_USE_I2C1 TRUE

define HAL_UART_MIN_TX_SIZE 64
define HAL_UART_MIN_RX_SIZE 64

define HAL_UART_STACK_SIZE 0
define STORAGE_THD_WA_SIZE 256
define IO_THD_WA_SIZE      256

define HAL_NO_MONITOR_THREAD
#define HAL_PERIPH_LISTEN_FOR_SERIAL_UART_REBOOT_CMD_PORT 0

# only one I2C bus
I2C_ORDER I2C1

define HAL_I2C_CLEAR_ON_TIMEOUT 0

define HAL_DEVICE_THREAD_STACK 256

define AP_PARAM_MAX_EMBEDDED_PARAM 0

define HAL_I2C_INTERNAL_MASK 0

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True

# reduce the number of CAN RX Buffer
define HAL_CAN_RX_QUEUE_SIZE 32

# disable stack checking to reduce flash cost
define CH_DBG_ENABLE_STACK_CHECK FALSE

define CAN_APP_NODE_NAME "io.mrobotics.m10053"

#BARO ND015A I2C:0:0x2C

define HAL_PROBE_EXTERNAL_I2C_COMPASSES

# Airspeed configuration:
define HAL_PERIPH_ENABLE_AIRSPEED
define AP_AIRSPEED_BACKEND_DEFAULT_ENABLED 0
define AP_AIRSPEED_ND_ENABLED   1

#define HAL_AIRSPEED_BUS_DEFAULT 0
define HAL_AIRSPEED_TYPE_DEFAULT 16
#define AIRSPEED_MAX_SENSORS 1


# Baro configuration:
define HAL_PERIPH_ENABLE_BARO
define AP_BARO_BACKEND_DEFAULT_ENABLED 0
define AP_BARO_ND015A_ENABLED 1

# debugger support
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

#DMA_NOSHARE *
